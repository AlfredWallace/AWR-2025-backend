services:
  php:
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
    volumes:
      - ./symfony:/var/www/symfony:ro  # Read-only in production
    depends_on:
      - postgres
    environment:
      APP_ENV: prod
      APP_SECRET: ${APP_SECRET}
      DATABASE_URL: "postgresql://symfony:${POSTGRES_PASSWORD}@postgres:5432/symfony?serverVersion=15&charset=utf8"
    restart: always

  nginx:
    image: nginx:1.25.3
    ports:
      - "80:80"
    volumes:
      - ./symfony:/var/www/symfony:ro  # Read-only in production
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
    restart: always

  postgres:
    image: postgres:15.4
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./.docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: symfony
      POSTGRES_DB: symfony
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U symfony"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  postgres-data: